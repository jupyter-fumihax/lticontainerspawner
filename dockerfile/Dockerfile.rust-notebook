#
# Usage
# 1. change FROM line
# 2. execute docker build command
# ex.) cd ..
#      docker build . --format=docker -f Dockerfile.rust-notebook -t jupyterhub/rust-notebook:temp
#

#FROM quay.io/jupyter/base-notebook
FROM quay.io/jupyterhub/singleuser
#FROM quay.io/jupyter/datascience-notebook
#FROM quay.io/jupyter/tensorflow-notebook
#FROM quay.io/jupyter/scipy-notebook


USER root

#
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    pkg-config \
    libssl-dev \
#    nodejs npm \
#    plocate \
    language-pack-ja-base language-pack-ja \
    fonts-ipafont-gothic fonts-ipafont-mincho \
    fonts-noto-cjk fonts-noto-cjk-extra \
    fonts-takao-pgothic fonts-takao-gothic fonts-takao-mincho \
 && apt-get -y clean \
 && rm -rf /var/lib/apt/lists/* \
 && true

ENV CONDA_HOME=/opt/conda
ENV PATH=$CONDA_HOME/bin:$PATH

RUN set -eux \
  && $CONDA_HOME/bin/conda update -n base -c conda-forge conda -y \
  && $CONDA_HOME/bin/conda config --add channels conda-forge \
  && $CONDA_HOME/bin/conda config --add channels defaults \
  && $CONDA_HOME/bin/conda config --set channel_priority strict \
  && $CONDA_HOME/bin/conda config --remove-key pinned_packages || true \
  && rm -f $CONDA_HOME/conda-meta/pinned || true \
  && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c defaults "blas=1.0=openblas" -y \
  && true

# Language & Ext Library
RUN set -eux \
 && $CONDA_HOME/bin/conda update -n base -c conda-forge conda -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge jupyterlab-language-pack-ja-jp -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge ipywidgets -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge pillow -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge pandas -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge ipycanvas -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge numpy -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge matplotlib -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge ipympl -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c conda-forge seaborn -y \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -c plotly plotly -y \
 && $CONDA_HOME/bin/conda clean   --all -y \
 && $CONDA_HOME/bin/pip   install --prefix $CONDA_HOME japanize-matplotlib \
 && true


# Install Rust
ENV RUSTUP_HOME=/usr/local/rustup
ENV CARGO_HOME=/usr/local/cargo
ENV PATH=$CARGO_HOME/bin:$PATH
ENV JUPYTER_PATH=$CONDA_HOME/share/jupyter

RUN set -eux \
 && curl -fsSL https://sh.rustup.rs -o /tmp/install_rust.sh  \
 && bash /tmp/install_rust.sh -y --default-toolchain stable --profile minimal \
 && rm /tmp/install_rust.sh \
 && ln -s $CARGO_HOME/bin/* /usr/local/bin/ \
 && cargo install evcxr_jupyter \
 && rustup component add rust-src \ 
 && pip install jupyter-console \
 && true

RUN evcxr_jupyter --install --prefix=/opt/conda \
 && jupyter kernelspec list \
 && jupyter console --kernel rust \
 && true

ENV DEFAULT_KERNEL_NAME "rust"

