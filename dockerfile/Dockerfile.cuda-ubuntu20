#
# Usage
# 1. change FROM line
# 2. execute docker build command
# ex.) docker build . --format=docker -f Dockerfile.cuda-ubuntu20 -t jupyterhub/base-notebook-gpu:temp
#

FROM docker.io/nvidia/cuda:12.2.0-base-ubuntu20.04

USER root

# ---- OS packages ----
RUN apt-get update \
 && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    wget sudo \
    language-pack-ja-base language-pack-ja \
    gcc-8 g++-8 \
    nvidia-cuda-dev \
    fonts-ipafont-gothic fonts-ipafont-mincho \
    fonts-noto-cjk fonts-noto-cjk-extra \
    fonts-takao-pgothic fonts-takao-gothic fonts-takao-mincho \
 && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 80 \
       --slave /usr/bin/g++ g++ /usr/bin/g++-8 \
       --slave /usr/bin/gcov gcov /usr/bin/gcov-8 \
 && apt-get -y clean \
 && rm -rf /var/lib/apt/lists/*

ENV CONDA_HOME=/opt/conda
ENV PATH=$CONDA_HOME/bin:$PATH


# ---- Miniconda (py3.12系) ----
RUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \
 && bash Miniconda3-latest-Linux-x86_64.sh -b -p $CONDA_HOME \
 && rm -f Miniconda3-latest-Linux-x86_64.sh

# ---- conda 設定（defaults を使わず TOS 問題を回避）----
RUN set -eux \
 && printf '%s\n' \
    'channels:' \
    '  - conda-forge' \
    '  - nvidia' \
    'channel_priority: strict' \
    > /root/.condarc \
 && $CONDA_HOME/bin/conda info


# ---- 基本パッケージ ----
RUN set -eux \
 && $CONDA_HOME/bin/conda update -n base -y --override-channels -c conda-forge conda \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -y --override-channels -c conda-forge \
      libarchive \
      libmamba \
      jupyterhub \
      jupyterhub-singleuser \
      jupyterlab \
      jupyterlab_widgets \
      jupyterlab-language-pack-ja-jp \
      pillow pandas numpy matplotlib \
      pip setuptools wheel \
 && $CONDA_HOME/bin/conda install --prefix $CONDA_HOME -y --override-channels -c nvidia \
      cuda-nvcc \
 && $CONDA_HOME/bin/conda clean --all -y


# ---- pip 追加（GPU 関連の軽量なもの）----
RUN set -eux \
 && $CONDA_HOME/bin/pip install --prefix $CONDA_HOME --no-cache-dir \
      pycuda \
      japanize-matplotlib


# TensorFlow GPU を後から入れる場合の補助フラグ（任意）
ENV XLA_FLAGS=--xla_gpu_cuda_data_dir=$CONDA_HOME/lib/


# 最終クリーン
RUN $CONDA_HOME/bin/conda clean --all -y || true

